[{"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/index.js":"1","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/App/index.js":"2","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/apiCalls.js":"3","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/User/index.js":"4","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Postings/index.js":"5","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingCard/index.js":"6","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingView/index.js":"7","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Navigation/index.js":"8"},{"size":274,"mtime":1609949746607,"results":"9","hashOfConfig":"10"},{"size":2291,"mtime":1610088702971,"results":"11","hashOfConfig":"10"},{"size":1219,"mtime":1610054730763,"results":"12","hashOfConfig":"10"},{"size":2889,"mtime":1610149963881,"results":"13","hashOfConfig":"10"},{"size":1337,"mtime":1610088730968,"results":"14","hashOfConfig":"10"},{"size":1234,"mtime":1610166021617,"results":"15","hashOfConfig":"10"},{"size":4708,"mtime":1610149812134,"results":"16","hashOfConfig":"10"},{"size":1906,"mtime":1610088813780,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1yrc0ho",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/index.js",[],["38","39"],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/App/index.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/apiCalls.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/User/index.js",["40"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./User.scss\";\nimport starImage from \"../../Assets/star.png\";\nimport userToggleButtonRight from \"../../Assets/right-chevron.png\";\nimport userToggleButtonLeft from \"../../Assets/left-chevron.png\";\n\nconst User = ({ info }) => {\n  const { id, name, profilePicture, volunteeredHours, upcomingJobs } = info;\n\n  const [userOpen, setUserOpen] = useState(true);\n\n  let userSidebarClass = userOpen ? \"user-open\" : \"user-closed\";\n  let userButtonClass = userOpen ? userToggleButtonLeft : userToggleButtonRight;\n\n  const handleUserToggle = () => {\n    setUserOpen(!userOpen);\n  };\n\n  return (\n    <div className=\"components-wrapper\">\n      <section className={userSidebarClass} id={id}>\n        <div\n          className=\"profile-picture\"\n          style={{\n            backgroundImage: `url(${profilePicture})`,\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-reapeat\",\n          }}\n        ></div>\n        <h3 className=\"username\">{name}</h3>\n        <div className=\"rating-wrapper\">\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n        </div>\n        <div className=\"section-titles\">\n          <p className=\"sidebar-titles\">Total Hours Volunteered</p>\n          <hr className=\"section-line\" />\n        </div>\n        <div className=\"hours-bar\">\n          <p>{volunteeredHours} Hours</p>\n        </div>\n        <div className=\"section-titles\">\n          <p className=\"sidebar-titles\">My Upcoming Jobs</p>\n          <hr className=\"section-line\" />\n        </div>\n        <div className=\"upcoming-job-cards-wrapper\">\n          {upcomingJobs.map((job) => {\n            return (\n              <Link to={`/postings/${job.eventId}`} className=\"upcoming-job-link-wrapper\">\n                <section key={job.id} className=\"upcoming-job-card\">\n                  <div className=\"event-info-wrapper\">\n                    <h3 className=\"job-event-main-detail\">{job.positionName}</h3>\n                    <h3 className=\"job-event-main-detail\">{job.date}</h3>\n                  </div>\n                  <h4 className=\"job-event-name\">{job.eventName}</h4>\n                </section>\n              </Link>\n            );\n          })}\n        </div>\n      </section>\n      <section className=\"user-toggle-button-wrap\">\n        <button className=\"user-toggle-button\">\n          <img className=\"glyph-icon-sidebar\" src={userButtonClass} onClick={handleUserToggle} />\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default User;\n","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Postings/index.js",["41"],"import React, { useState, useEffect } from 'react';\nimport './Postings.scss';\nimport PostingCard from '../PostingCard';\nimport Navigation from \"../Navigation\";\n\nconst Postings = ({ isSorted, postings, searchByKeyWord, filterByCategory, sortPostingsByDate }) => {\n  const [categories, setCategories] = useState([]);\n\n  const getCategories = () => {\n    const categories = postings.reduce((totalCategories, posting) => {\n      if (!totalCategories.includes(posting.category)) {\n        totalCategories.push(posting.category)\n      }\n      return totalCategories.sort();\n    }, []);\n    setCategories(categories);\n  } \n  const postingCards = postings.map(posting => (\n    <PostingCard posting={posting} key={posting.id} />\n  ))\n\n  useEffect(() => getCategories(), [])\n  \n  return (\n    <section className=\"postings-container\">\n      <div className=\"postings-title-wrapper\">\n        <h1 className=\"postings-title\">Open Volunteer Positions</h1>\n      </div>\n      <div>\n        <Navigation \n          isSorted={isSorted}\n          searchByKeyWord={searchByKeyWord} \n          categories={categories}\n          filterByCategory={filterByCategory}\n          sortByDate={sortPostingsByDate}\n        />\n      </div>\n      <section className=\"postings-wrapper\">\n        {postingCards}\n      </section>\n    </section>\n  )\n}\n\nexport default Postings","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingCard/index.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingView/index.js",["42","43"],"import React, { useState, useEffect } from \"react\";\nimport { apiCalls } from \"../../apiCalls\";\nimport \"./PostingView.scss\";\nimport backButton from \"../../Assets/back-button.png\";\nimport { Link } from \"react-router-dom\";\n\nconst PostingView = ({ match, getUserInfo }) => {\n  const eventId = match.params.id;\n  const [chosenPosting, setChosenPosting] = useState(null);\n  const [chosenJob, setChosenJob] = useState(null);\n  const [hasSignedUp, setHasSignedUp] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n\n  const getDetails = () => {\n    Promise.all([apiCalls.getUser(), apiCalls.getSinglePosting(eventId)]).then(\n      (data) => {\n        setUserInfo(data[0]);\n        setChosenPosting(data[1]);\n        const signedUpEvent = data[0].upcomingJobs.find(\n          (job) => job.eventName === data[1].name\n        );\n        if (signedUpEvent) {\n          setHasSignedUp(true);\n        }\n      }\n    );\n  };\n\n  const substractOpenPosition = () => {\n    apiCalls.patchEventPosting(eventId, { jobId: chosenJob.id }).then(() => {\n      postPositionToUser();\n      setHasSignedUp(true);\n    });\n  };\n\n  const postPositionToUser = () => {\n    const newUpcomingJob = {\n      id: `1-${chosenJob.id}`,\n      eventId,\n      eventName: chosenPosting.name,\n      positionName: chosenJob.name,\n      date: chosenPosting.date,\n    };\n    apiCalls.postJobPosting(newUpcomingJob).then(() => {\n      getUserInfo();\n    });\n  };\n\n  useEffect(() => getDetails(), [userInfo]);\n\n  if (chosenPosting) {\n    const {\n      date,\n      name,\n      organization,\n      location,\n      description,\n      duration,\n      category,\n      openJobs,\n    } = chosenPosting;\n\n    const reformedDate = new Date(date)\n      .toDateString()\n      .split(\" \")\n      .slice(1)\n      .join(\" \");\n\n    return (\n      <section className=\"postings-container\">\n        <div className=\"postings-title-wrapper\">\n          <h1 className=\"postings-title\">Event Details</h1>\n        </div>\n        <div className=\"back-button-wrap\">\n          <Link to=\"/\">\n            <img src={backButton} className=\"back-button-img\" />\n          </Link>\n        </div>\n        <div className=\"posting-info-wrapper\">\n          <div className=\"posting-left-info-wrapper\">\n            <h3 className=\"event-title\">{name}</h3>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Description</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <p className=\"event-description\">{description}</p>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Open Positions</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <div className=\"posting-position-cards-wrapper\">\n              {openJobs.map((job) => (\n                <button\n                  onClick={() => setChosenJob(job)}\n                  key={job.id}\n                  className=\"posting-positions-card\"\n                >\n                  <h3 className=\"event-job-name\">{job.name}</h3>\n                  <p className=\"event-job-title\">Open Spots: {job.numberOfSpots}</p>\n                </button>\n              ))}\n            </div>\n            <div className=\"submit-button-wrapper\">\n              <button\n                onClick={substractOpenPosition}\n                disabled={hasSignedUp ? true : false}\n                className=\"submit-button\"\n              >\n                Let me help!\n              </button>\n            </div>\n          </div>\n          <div className=\"posting-right-info-wrapper\">\n            <h3 className=\"event-title\">{reformedDate}</h3>\n            <div className=\"posting-organization-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Organization</p>\n              </strong>\n              <p>{organization}</p>\n            </div>\n            <div className=\"posting-category-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Category</p>\n              </strong>\n              <p>{category}</p>\n            </div>\n            <div className=\"posting-location-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Location</p>\n              </strong>\n              <p>{location}</p>\n            </div>\n            <div className=\"posting-duration-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Duration</p>\n              </strong>\n              <p>{duration}</p>\n            </div>   \n          </div>\n        </div>\n      </section>\n    );\n  }\n  return null;\n};\n\nexport default PostingView;\n","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Navigation/index.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":69,"column":11,"nodeType":"50","endLine":69,"endColumn":98},{"ruleId":"51","severity":1,"message":"52","line":22,"column":36,"nodeType":"53","endLine":22,"endColumn":38,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":49,"column":33,"nodeType":"53","endLine":49,"endColumn":43,"suggestions":"56"},{"ruleId":"48","severity":1,"message":"49","line":76,"column":13,"nodeType":"50","endLine":76,"endColumn":65},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["60"],"no-global-assign","no-unsafe-negation",{"desc":"61","fix":"62"},{"desc":"63","fix":"64"},"Update the dependencies array to be: [getCategories]",{"range":"65","text":"66"},"Update the dependencies array to be: [getDetails, userInfo]",{"range":"67","text":"68"},[761,763],"[getCategories]",[1464,1474],"[getDetails, userInfo]"]