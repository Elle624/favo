[{"/Users/elle/turing/mod-3/project/ivolunteer/src/index.js":"1","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/App/index.js":"2","/Users/elle/turing/mod-3/project/ivolunteer/src/apiCalls.js":"3","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Postings/index.js":"4","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/User/index.js":"5","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingView/index.js":"6","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingCard/index.js":"7"},{"size":274,"mtime":1609903669918,"results":"8","hashOfConfig":"9"},{"size":1005,"mtime":1609972534166,"results":"10","hashOfConfig":"9"},{"size":988,"mtime":1609957399956,"results":"11","hashOfConfig":"9"},{"size":519,"mtime":1609972810370,"results":"12","hashOfConfig":"9"},{"size":1798,"mtime":1609972744526,"results":"13","hashOfConfig":"9"},{"size":2713,"mtime":1609972796348,"results":"14","hashOfConfig":"9"},{"size":1228,"mtime":1609972848269,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"jkyitm",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elle/turing/mod-3/project/ivolunteer/src/index.js",[],["33","34"],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/App/index.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/apiCalls.js",["35"],"const getData = (path) => {\n  return fetch(path).then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      throw new Error(\n        \"Sorry we are having difficulty loading this page, please try again later!\"\n      );\n    }\n  });\n};\n\nconst updateData = (path, action, id) => {\n  return fetch(path, {\n    method: action,\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\",\n    },\n    body: JSON.stringify({ id: id }),\n  }).then((response) => {\n    if (response.ok) {\n      return response;\n    } else {\n      throw new Error(\n        \"Sorry we are having difficulty loading this page, please try again later!\"\n      );\n    }\n  });\n};\n\nexport const apiCalls = {\n\n  getUser: () => {\n    return getData(\"http://localhost:3001/users/1\");\n  },\n\n  getPostings: () => {\n    return getData(\"http://localhost:3001/events\");\n  },\n\n  getSinglePosting: (id) => {\n    return getData(`http://localhost:3001/events/${id}`);\n  }\n};\n","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Postings/index.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/User/index.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingView/index.js",["36"],"import React, { useState, useEffect } from \"react\";\nimport { apiCalls } from \"../../apiCalls\";\nimport \"./PostingView.scss\";\n\nconst PostingView = ({ match }) => {\n  const [chosenPosting, setChosenPosting] = useState(null);\n  const { id } = match.params;\n\n  const getSinglePostingInfo = (id) => {\n    apiCalls.getSinglePosting(id).then((data) => setChosenPosting(data));\n  };\n\n  useEffect(() => getSinglePostingInfo(id), []);\n\n  if (chosenPosting) {\n    const {\n      date,\n      name,\n      organization,\n      location,\n      description,\n      duration,\n      openJobs,\n    } = chosenPosting;\n\n    const reformedDate = new Date(date)\n      .toDateString()\n      .split(\" \")\n      .slice(1)\n      .join(\" \");\n\n    return (\n      <section className=\"postings-container\">\n        <div className=\"postings-title-wrapper\">\n          <h1 className=\"postings-title\">Event Details</h1>\n        </div>\n        <div className=\"posting-info-wrapper\">\n          <div className=\"posting-left-info-wrapper\">\n            <h3>{name}</h3>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Description</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <p>{description}</p>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Open Positions</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <div className=\"posting-position-cards-wrapper\">\n              {openJobs.map((job) => (\n                <section key={job.id} className=\"posting-positions-card\">\n                  <h3>{job.name}</h3>\n                  <p>Open Spots: {job.numberOfSpots}</p>\n                </section>\n              ))}\n            </div>\n          </div>\n          <div className=\"posting-right-info-wrapper\">\n            <h3>{reformedDate}</h3>\n            <div className=\"posting-organization-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Organization</p>\n              </strong>\n              <p>{organization}</p>\n            </div>\n            <div className=\"posting-location-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Location</p>\n              </strong>\n              <p>{location}</p>\n            </div>\n            <div className=\"posting-duration-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Duration</p>\n              </strong>\n              <p>{duration}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n  return null;\n};\n\nexport default PostingView;\n","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingCard/index.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":13,"column":7,"nodeType":"43","messageId":"44","endLine":13,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":13,"column":45,"nodeType":"47","endLine":13,"endColumn":47,"suggestions":"48"},"no-native-reassign",["49"],"no-negated-in-lhs",["50"],"no-unused-vars","'updateData' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["51"],"no-global-assign","no-unsafe-negation",{"desc":"52","fix":"53"},"Update the dependencies array to be: [id]",{"range":"54","text":"55"},[419,421],"[id]"]