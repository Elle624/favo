[{"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/index.js":"1","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/App/index.js":"2","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/apiCalls.js":"3","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/Postings/index.js":"4","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/User/index.js":"5","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/PostingView/index.js":"6","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/PostingCard/index.js":"7","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/Navigation/index.js":"8"},{"size":274,"mtime":1609903842735,"results":"9","hashOfConfig":"10"},{"size":2259,"mtime":1610123143650,"results":"11","hashOfConfig":"10"},{"size":1219,"mtime":1609992569347,"results":"12","hashOfConfig":"10"},{"size":1297,"mtime":1610123143652,"results":"13","hashOfConfig":"10"},{"size":2820,"mtime":1610081045071,"results":"14","hashOfConfig":"10"},{"size":4412,"mtime":1610081045070,"results":"15","hashOfConfig":"10"},{"size":1228,"mtime":1609989163825,"results":"16","hashOfConfig":"10"},{"size":1563,"mtime":1610123143651,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"axssjc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/index.js",[],["39","40"],"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/App/index.js",[],"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/apiCalls.js",[],"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/Postings/index.js",["41"],"import React, { useState, useEffect } from 'react';\nimport './Postings.scss';\nimport PostingCard from '../PostingCard';\nimport Navigation from \"../Navigation\";\n\nconst Postings = ({ postings, searchByKeyWord, filterByCategory, sortPostingsByDate }) => {\n  const [categories, setCategories] = useState([]);\n\n  const getCategories = () => {\n    const categories = postings.reduce((totalCategories, posting) => {\n      if (!totalCategories.includes(posting.category)) {\n        totalCategories.push(posting.category)\n      }\n      return totalCategories.sort();\n    }, []);\n    setCategories(categories);\n  } \n  const postingCards = postings.map(posting => (\n    <PostingCard posting={posting} key={posting.id} />\n  ))\n\n  useEffect(() => getCategories(), [])\n  \n  return (\n    <section className=\"postings-container\">\n      <div className=\"postings-title-wrapper\">\n        <h1 className=\"postings-title\">Open Volunteer Positions</h1>\n      </div>\n      <div>\n        <Navigation \n          searchByKeyWord={searchByKeyWord} \n          categories={categories}\n          filterByCategory={filterByCategory}\n          sortByDate={sortPostingsByDate}\n        />\n      </div>\n      <section className=\"postings-wrapper\">\n        {postingCards}\n      </section>\n    </section>\n  )\n}\n\nexport default Postings","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/User/index.js",["42"],"import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./User.scss\";\nimport starImage from \"../../Assets/star.png\";\nimport userToggleButtonRight from \"../../Assets/right-chevron.png\";\nimport userToggleButtonLeft from \"../../Assets/left-chevron.png\";\n\nconst User = ({ info }) => {\n  const { id, name, profilePicture, volunteeredHours, upcomingJobs } = info;\n\n  const [userOpen, setUserOpen] = useState(true);\n\n  let userSidebarClass = userOpen ? \"user-open\" : \"user-closed\";\n  let userButtonClass = userOpen ? userToggleButtonLeft : userToggleButtonRight;\n\n  const handleUserToggle = () => {\n    setUserOpen(!userOpen);\n  };\n\n  return (\n    <div className=\"components-wrapper\">\n      <section className={userSidebarClass} id={id}>\n        <div\n          className=\"profile-picture\"\n          style={{\n            backgroundImage: `url(${profilePicture})`,\n            backgroundPosition: \"center\",\n            backgroundSize: \"cover\",\n            backgroundRepeat: \"no-reapeat\",\n          }}\n        ></div>\n        <h3 className=\"username\">{name}</h3>\n        <div className=\"rating-wrapper\">\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n          <img className=\"star-image\" src={starImage} alt=\"star-icon\" />\n        </div>\n        <div className=\"section-titles\">\n          <p className=\"sidebar-titles\">Total Hours Volunteered</p>\n          <hr className=\"section-line\" />\n        </div>\n        <div className=\"hours-bar\">\n          <p>{volunteeredHours} Hours</p>\n        </div>\n        <div className=\"section-titles\">\n          <p className=\"sidebar-titles\">My Upcoming Jobs</p>\n          <hr className=\"section-line\" />\n        </div>\n        <div className=\"upcoming-job-cards-wrapper\">\n          {upcomingJobs.map((job) => {\n            return (\n              <Link to={`/postings/${job.eventId}`}>\n                <section key={job.id} className=\"upcoming-job-card\">\n                  <div className=\"event-info-wrapper\">\n                    <h3 className=\"job-event-main-detail\">{job.positionName}</h3>\n                    <h3 className=\"job-event-main-detail\">{job.date}</h3>\n                  </div>\n                  <h4 className=\"job-event-name\">{job.eventName}</h4>\n                </section>\n              </Link>\n            );\n          })}\n        </div>\n      </section>\n      <section className=\"user-toggle-button-wrap\">\n        <button className=\"user-toggle-button\">\n          <img src={userButtonClass} onClick={handleUserToggle} />\n        </button>\n      </section>\n    </div>\n  );\n};\n\nexport default User;\n","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/PostingView/index.js",["43","44"],"import React, { useState, useEffect } from \"react\";\nimport { apiCalls } from \"../../apiCalls\";\nimport \"./PostingView.scss\";\nimport backButton from \"../../Assets/back-button.png\";\nimport { Link } from \"react-router-dom\";\n\nconst PostingView = ({ match, getUserInfo }) => {\n  const eventId = match.params.id;\n  const [chosenPosting, setChosenPosting] = useState(null);\n  const [chosenJob, setChosenJob] = useState(null);\n  const [hasSignedUp, setHasSignedUp] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n\n  const getDetails = () => {\n    Promise.all([apiCalls.getUser(), apiCalls.getSinglePosting(eventId)]).then(\n      (data) => {\n        setUserInfo(data[0]);\n        setChosenPosting(data[1]);\n        const signedUpEvent = data[0].upcomingJobs.find(\n          (job) => job.eventName === data[1].name\n        );\n        if (signedUpEvent) {\n          setHasSignedUp(true);\n        }\n      }\n    );\n  };\n\n  const substractOpenPosition = () => {\n    apiCalls.patchEventPosting(eventId, { jobId: chosenJob.id }).then(() => {\n      postPositionToUser();\n      setHasSignedUp(true);\n    });\n  };\n\n  const postPositionToUser = () => {\n    const newUpcomingJob = {\n      id: `1-${chosenJob.id}`,\n      eventId,\n      eventName: chosenPosting.name,\n      positionName: chosenJob.name,\n      date: chosenPosting.date,\n    };\n    apiCalls.postJobPosting(newUpcomingJob).then(() => {\n      getUserInfo();\n    });\n  };\n\n  useEffect(() => getDetails(), [userInfo]);\n\n  if (chosenPosting) {\n    const {\n      date,\n      name,\n      organization,\n      location,\n      description,\n      duration,\n      openJobs,\n    } = chosenPosting;\n\n    const reformedDate = new Date(date)\n      .toDateString()\n      .split(\" \")\n      .slice(1)\n      .join(\" \");\n\n    return (\n      <section className=\"postings-container\">\n        <div className=\"postings-title-wrapper\">\n          <h1 className=\"postings-title\">Event Details</h1>\n        </div>\n        <div className=\"back-button-wrap\">\n          <Link to=\"/\">\n            <img src={backButton} className=\"back-button-img\" />\n          </Link>\n        </div>\n        <div className=\"posting-info-wrapper\">\n          <div className=\"posting-left-info-wrapper\">\n            <h3 className=\"event-title\">{name}</h3>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Description</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <p className=\"event-description\">{description}</p>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Open Positions</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <div className=\"posting-position-cards-wrapper\">\n              {openJobs.map((job) => (\n                <button\n                  onClick={() => setChosenJob(job)}\n                  key={job.id}\n                  className=\"posting-positions-card\"\n                >\n                  <h3>{job.name}</h3>\n                  <p>Open Spots: {job.numberOfSpots}</p>\n                </button>\n              ))}\n            </div>\n            <div className=\"submit-button-wrapper\">\n              <button\n                onClick={substractOpenPosition}\n                disabled={hasSignedUp ? true : false}\n                className=\"submit-button\"\n              >\n                SUBMIT\n              </button>\n            </div>\n          </div>\n          <div className=\"posting-right-info-wrapper\">\n            <h3 className=\"event-title\">{reformedDate}</h3>\n            <div className=\"posting-organization-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Organization</p>\n              </strong>\n              <p>{organization}</p>\n            </div>\n            <div className=\"posting-location-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Location</p>\n              </strong>\n              <p>{location}</p>\n            </div>\n            <div className=\"posting-duration-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Duration</p>\n              </strong>\n              <p>{duration}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n  return null;\n};\n\nexport default PostingView;\n","/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/PostingCard/index.js",[],"/Users/cooperterrones/turing/module3/projects/iVolunteer/src/Components/Navigation/index.js",["45"],"import React, { useState } from \"react\";\nimport sortGlyphicon from \"../../Assets/sort-button.png\";\n\n\n\n\nconst Navigation = ({ searchByKeyWord, categories, filterByCategory, sortByDate}) => {\n  const [keyWord, setKeyWord] = useState('');\n\n  const searchPostings = (e) => {\n    e.preventDefault();\n    searchByKeyWord(keyWord)\n    setKeyWord('');\n  }\n\n  const sortPostings = (e) => {\n    e.preventDefault();\n    sortByDate();\n  }\n  \n  return(\n    <section className=\"navigation-bar\">\n      <input class=\"input-button-sort\" type=\"text\" value={keyWord} placeholder=\"i.e Boulder...\" onChange={(e) => setKeyWord(e.target.value)}></input>\n      <input class=\"button-search\" type=\"submit\" value=\"search\" onClick={(searchPostings)}></input>\n      <div class=\"container-button-sort\"> \n        <button \n          onClick={sortPostings}\n          className =\"button-sort\"\n          value=\"sort\"\n          type=\"submit\">Sort<span aria-hidden=\"true\" class=\"glyphicon\"><img src={sortGlyphicon}/></span>\n        </button> \n      </div>\n      <article className=\"container-button-filter\">\n        <select className=\"filter-box\" name=\"category\" onChange={(e) => filterByCategory(e.target.value)}>\n          <option className=\"filter-item\" defaultValue>-- select category --</option>\n          {categories.map(category => (\n            <option \n              className=\"filter-item\"\n              value={category} \n              key={`1-${category}`}\n            >{category}</option>\n          ))}\n          </select>\n      </article>\n    </section>\n  )\n\n}\n\nexport default Navigation",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":22,"column":36,"nodeType":"52","endLine":22,"endColumn":38,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":69,"column":11,"nodeType":"56","endLine":69,"endColumn":67},{"ruleId":"50","severity":1,"message":"57","line":49,"column":33,"nodeType":"52","endLine":49,"endColumn":43,"suggestions":"58"},{"ruleId":"54","severity":1,"message":"55","line":75,"column":13,"nodeType":"56","endLine":75,"endColumn":65},{"ruleId":"54","severity":1,"message":"55","line":30,"column":72,"nodeType":"56","endLine":30,"endColumn":98},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["61"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["62"],"no-global-assign","no-unsafe-negation",{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},"Update the dependencies array to be: [getCategories]",{"range":"67","text":"68"},"Update the dependencies array to be: [getDetails, userInfo]",{"range":"69","text":"70"},[751,753],"[getCategories]",[1464,1474],"[getDetails, userInfo]"]