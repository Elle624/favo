[{"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/index.js":"1","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/App/index.js":"2","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/apiCalls.js":"3","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/User/index.js":"4","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Postings/index.js":"5","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingCard/index.js":"6","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingView/index.js":"7","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Navigation/index.js":"8"},{"size":274,"mtime":1609949746607,"results":"9","hashOfConfig":"10"},{"size":2385,"mtime":1610062107256,"results":"11","hashOfConfig":"10"},{"size":1219,"mtime":1610054730763,"results":"12","hashOfConfig":"10"},{"size":2690,"mtime":1610061687433,"results":"13","hashOfConfig":"10"},{"size":1297,"mtime":1610062383853,"results":"14","hashOfConfig":"10"},{"size":1228,"mtime":1609974303922,"results":"15","hashOfConfig":"10"},{"size":4402,"mtime":1610061687431,"results":"16","hashOfConfig":"10"},{"size":1376,"mtime":1610062340393,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1yrc0ho",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/index.js",[],["37","38"],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/App/index.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/apiCalls.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/User/index.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Postings/index.js",["39"],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingCard/index.js",[],"/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/PostingView/index.js",["40"],"import React, { useState, useEffect } from \"react\";\nimport { apiCalls } from \"../../apiCalls\";\nimport \"./PostingView.scss\";\n\nconst PostingView = ({ match }) => {\n  const eventId = match.params.id;\n  const [chosenPosting, setChosenPosting] = useState(null);\n  const [chosenJob, setChosenJob] = useState(null);\n  const [hasSignedUp, setHasSignedUp] = useState(false);\n  const [userInfo, setUserInfo] = useState(null);\n\n  const getDetails = () => {\n    Promise.all([apiCalls.getUser(), apiCalls.getSinglePosting(eventId)]).then(\n      (data) => {\n        let signedUpEvent;\n        setUserInfo(data[0]);\n        setChosenPosting(data[1]);\n        if (userInfo) {\n          signedUpEvent = userInfo.upcomingJobs.find(\n            (job) => job.eventName === data[1].name\n          );\n        }\n        if (signedUpEvent) {\n          setHasSignedUp(true);\n        }\n      }\n    );\n  };\n\n  const substractOpenPosition = () => {\n    apiCalls.patchEventPosting(eventId, { jobId: chosenJob.id }).then(() => {\n      postPositionToUser();\n      setHasSignedUp(true);\n      getDetails();\n    });\n  };\n\n  const postPositionToUser = () => {\n    const newUpcomingJob = {\n      id: `1-${chosenJob.id}`,\n      eventName: chosenPosting.name,\n      positionName: chosenJob.name,\n      date: chosenPosting.date,\n    };\n    apiCalls.postJobPosting(newUpcomingJob).then(() => {\n      getDetails();\n    });\n  };\n\n  useEffect(() => getDetails(eventId), userInfo);\n\n  if (chosenPosting) {\n    const {\n      date,\n      name,\n      organization,\n      location,\n      description,\n      duration,\n      openJobs,\n    } = chosenPosting;\n\n    const reformedDate = new Date(date)\n      .toDateString()\n      .split(\" \")\n      .slice(1)\n      .join(\" \");\n\n    return (\n      <section className=\"postings-container\">\n        <div className=\"postings-title-wrapper\">\n          <h1 className=\"postings-title\">Event Details</h1>\n        </div>\n        <div className=\"posting-info-wrapper\">\n          <div className=\"posting-left-info-wrapper\">\n            <h3 className=\"event-title\">{name}</h3>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Description</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <p className=\"event-description\">{description}</p>\n            <div className=\"section-titles\">\n              <strong>\n                <p className=\"posting-info-title\">Open Positions</p>\n              </strong>\n              <hr className=\"section-line\" />\n            </div>\n            <div className=\"posting-position-cards-wrapper\">\n              {openJobs.map((job) => (\n                <section\n                  onClick={() => setChosenJob(job)}\n                  key={job.id}\n                  className=\"posting-positions-card\"\n                >\n                  <h3>{job.name}</h3>\n                  <p>Open Spots: {job.numberOfSpots}</p>\n                </section>\n              ))}\n            </div>\n            <div className=\"submit-button-wrapper\">\n              <button\n                onClick={substractOpenPosition}\n                disabled={hasSignedUp ? true : false}\n                className=\"submit-button\"\n              >\n                SUBMIT\n              </button>\n            </div>\n          </div>\n          <div className=\"posting-right-info-wrapper\">\n            <h3 className=\"event-title\">{reformedDate}</h3>\n            <div className=\"posting-organization-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Organization</p>\n              </strong>\n              <p>{organization}</p>\n            </div>\n            <div className=\"posting-location-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Location</p>\n              </strong>\n              <p>{location}</p>\n            </div>\n            <div className=\"posting-duration-wrapper\">\n              <strong>\n                <p className=\"posting-info-title\">Duration</p>\n              </strong>\n              <p>{duration}</p>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n  return null;\n};\n\nexport default PostingView;\n","/Users/olgamorgan/turing/3module/projects/ivolunteer-app-group/ivolunteer/src/Components/Navigation/index.js",["41"],"import React, { useState } from \"react\";\n\nconst Navigation = ({ searchByKeyWord }) => {\n  const [keyWord, setKeyWord] = useState('');\n\n  const searchPostings = (e) => {\n    e.preventDefault();\n    searchByKeyWord(keyWord)\n    setKeyWord('');\n  }\n  \n  return(\n    <section>\n      <input type=\"text\" value={keyWord} placeholder=\"i.e Boulder...\" onChange={(e) => setKeyWord(e.target.value)}></input>\n      <input type=\"submit\" value=\"search\" onClick={(searchPostings)}></input>\n    </section>\n  )\n\n}\n\nexport default Navigation",{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":22,"column":36,"nodeType":"48","endLine":22,"endColumn":38,"suggestions":"49"},{"ruleId":"46","severity":1,"message":"50","line":13,"column":45,"nodeType":"48","endLine":13,"endColumn":47,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":27,"column":72,"nodeType":"54","endLine":27,"endColumn":98},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["57"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [getCategories]",{"range":"63","text":"64"},"Update the dependencies array to be: [id]",{"range":"65","text":"66"},[751,753],"[getCategories]",[419,421],"[id]"]