[{"/Users/elle/turing/mod-3/project/ivolunteer/src/index.js":"1","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/App/index.js":"2","/Users/elle/turing/mod-3/project/ivolunteer/src/apiCalls.js":"3","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Postings/index.js":"4","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/User/index.js":"5","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingView/index.js":"6","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Navigation/index.js":"7","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingCard/index.js":"8"},{"size":274,"mtime":1609903669918,"results":"9","hashOfConfig":"10"},{"size":2291,"mtime":1610221362495,"results":"11","hashOfConfig":"10"},{"size":1364,"mtime":1610419151387,"results":"12","hashOfConfig":"10"},{"size":1368,"mtime":1610402653129,"results":"13","hashOfConfig":"10"},{"size":3024,"mtime":1610417262722,"results":"14","hashOfConfig":"10"},{"size":5553,"mtime":1610419530420,"results":"15","hashOfConfig":"10"},{"size":2217,"mtime":1610402653126,"results":"16","hashOfConfig":"10"},{"size":1306,"mtime":1610402653127,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jkyitm",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/elle/turing/mod-3/project/ivolunteer/src/index.js",[],["37","38"],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/App/index.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/apiCalls.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Postings/index.js",["39"],"import React, { useState, useEffect } from 'react';\nimport './Postings.scss';\nimport PostingCard from '../PostingCard';\nimport Navigation from \"../Navigation\";\n\nconst Postings = ({ isSorted, postings, searchByKeyWord, filterByCategory, sortPostingsByDate }) => {\n  const [categories, setCategories] = useState([]);\n\n  const getCategories = () => {\n    const categories = postings.reduce((totalCategories, posting) => {\n      if (!totalCategories.includes(posting.category)) {\n        totalCategories.push(posting.category)\n      }\n      return totalCategories.sort();\n    }, []);\n    setCategories(categories);\n  } \n  const postingCards = postings.map(posting => (\n    <PostingCard posting={posting} key={posting.id} />\n  ))\n\n  useEffect(() => getCategories(), [])\n  \n  return (\n    <section data-testid=\"postings-element\" className=\"postings-container\">\n      <div className=\"postings-title-wrapper\">\n        <h1 className=\"postings-title\">Open Volunteer Positions</h1>\n      </div>\n      <div>\n        <Navigation \n          isSorted={isSorted}\n          searchByKeyWord={searchByKeyWord} \n          categories={categories}\n          filterByCategory={filterByCategory}\n          sortByDate={sortPostingsByDate}\n        />\n      </div>\n      <section className=\"postings-wrapper\">\n        {postingCards}\n      </section>\n    </section>\n  )\n}\n\nexport default Postings","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/User/index.js",[],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingView/index.js",["40","41"],"/Users/elle/turing/mod-3/project/ivolunteer/src/Components/Navigation/index.js",["42"],"import React, { useState } from \"react\";\n// import sortGlyphicon from \"../../Assets/desc-sort-button.png\";\nimport './Navigation.scss';\nimport descSortButton from \"../../Assets/desc-sort-button.png\";\nimport asceSortButton from \"../../Assets/asce-sort-button.png\";\n\n\n\nconst Navigation = ({ isSorted, searchByKeyWord, categories, filterByCategory, sortByDate}) => {\n  const [keyWord, setKeyWord] = useState(''); \n\n  const searchPostings = (e) => {\n    e.preventDefault();\n    searchByKeyWord(keyWord)\n    setKeyWord('');\n  }\n\n  const sortPostings = (e) => {\n    e.preventDefault();\n    sortByDate();\n  }\n  \n  return(\n    <section className=\"navigation-bar\">\n      <label htmlFor=\"search-input\"class=\"label-input-search\"></label>\n      <input id=\"search-input\" name=\"search-input\" class=\"input-button-sort\" type=\"text\" value={keyWord} placeholder=\"i.e Boulder...\" onChange={(e) => setKeyWord(e.target.value)}></input>\n      <button class=\"button-search\" type=\"submit\" onClick={(searchPostings)}>search</button>\n      <div class=\"container-button-sort\"> \n        <button \n          onClick={sortPostings}\n          className =\"button-sort\"\n          value=\"sort\"\n          type=\"submit\">sort<span aria-hidden=\"true\" class=\"glyphicon\"><img className=\"sort-icon\" src={isSorted ? asceSortButton : descSortButton} alt=\"sort-icon\"/></span>\n        </button> \n      </div>\n      <article className=\"container-button-filter\">\n        <select className=\"filter-box\" name=\"category\" onChange={(e) => filterByCategory(e.target.value)}>\n          <option className=\"filter-item\" defaultValue>-- select category --</option>\n          {categories.map(category => (\n            <option \n              className=\"filter-item\"\n              value={category} \n              key={`1-${category}`}\n            >{category}</option>\n          ))}\n          </select>\n      </article>\n    </section>\n  )\n\n}\n\nexport default Navigation","/Users/elle/turing/mod-3/project/ivolunteer/src/Components/PostingCard/index.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":22,"column":36,"nodeType":"49","endLine":22,"endColumn":38,"suggestions":"50"},{"ruleId":"51","severity":1,"message":"52","line":12,"column":10,"nodeType":"53","messageId":"54","endLine":12,"endColumn":18},{"ruleId":"47","severity":1,"message":"55","line":53,"column":33,"nodeType":"49","endLine":53,"endColumn":35,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":30,"column":72,"nodeType":"59","endLine":30,"endColumn":98},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCategories'. Either include it or remove the dependency array.","ArrayExpression",["62"],"no-unused-vars","'userInfo' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getDetails'. Either include it or remove the dependency array.",["63"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},{"desc":"66","fix":"67"},"Update the dependencies array to be: [getCategories]",{"range":"68","text":"69"},"Update the dependencies array to be: [getDetails]",{"range":"70","text":"71"},[761,763],"[getCategories]",[1612,1614],"[getDetails]"]